// Meter el cuerpo json en post y put

// Peticiones Game

### Se obtiene por defecto los 10 primeros juegos de la lista
GET http://localhost:8080/api/games

### Se obtiene toda la lista de juegos
GET http://localhost:8080/api/games/all

### Se obtiene los datos del juego con id 6
GET http://localhost:8080/api/games/6


// Peticiones Matches

### Se obtiene por defecto las 10 primeras partidas de la lista
GET http://localhost:8080/api/matches

### Se obtiene toda la lista de las partidas
GET http://localhost:8080/api/matches/all

### Se obtiene los datos de la partida con id 4
GET http://localhost:8080/api/matches/4

### Se crea una nueva partida
POST http://localhost:8080/api/matches HTTP/1.1
Content-Type: application/json

{
  "word": "Mountain",
  "score": 85,
  "nTries": 5,
  "dateTime": "2023-12-14T19:45:00.000+00:00",
  "player": {
    "userName": "Usuario6",
    "score": 105,
    "avatarImg": null,
    "team": {
      "idTeam": 4,
      "score": 75,
      "teamName": "Team 4",
      "badge": null
    }
  },
  "team": {
    "score": 75,
    "teamName": "Team 4",
    "badge": null
  },
  "game": {
    "maxTries": 6,
    "description": "A game with words related to nature and landscapes.",
    "difficulty": "MEDIUM"
  }
}

### Se actualizan los datos de la partida con id 5
PUT http://localhost:8080/api/matches/5 HTTP/1.1
Content-Type: application/json

{
  "word": "UpdatedWord",
  "score": 100,
  "nTries": 2,
  "dateTime": "2023-12-14T19:37:58.288+00:00"
}

### Se borra la partida con id 6
DELETE http://localhost:8080/api/matches/6


// Peticiones Player

### Se obtiene por defecto los 10 primeros jugadores de la lista
GET http://localhost:8080/api/players

### Se obtiene la lista de todos los jugadores
GET http://localhost:8080/api/players/all

### Se obtiene los datos del jugador con id 4
GET http://localhost:8080/api/players/4

### Se crea un nuevo jugador
POST http://localhost:8080/api/players HTTP/1.1
Content-Type: application/json

{
  "userName": "NuevoUsuario",
  "score": 100,
  "avatarImg": null,
  "team": {
    "idTeam": 4,
    "score": 70,
    "teamName": "TeamName 4",
    "badge": null
  }
}

### Se actualizan los datos del jugador con id 8
PUT http://localhost:8080/api/players/8 HTTP/1.1
Content-Type: application/json

{
  "userName": "NuevoUsuario",
  "score": 92,
  "avatarImg": null,
  "team": {
    "idTeam": 4,
    "score": 90,
    "teamName": "NuevoEquipo",
    "badge": null
  }
}

### Se borra los datos del jugador con id 3
DELETE http://localhost:8080/api/players/3


// Peticiones Team

### Se obtiene por defecto los 10 primeros equipos de la lista
GET http://localhost:8080/api/teams

### Se obtiene la lista de todos los equipos
GET http://localhost:8080/api/teams/all

### Se obtiene el equipo con id 4
GET http://localhost:8080/api/teams/4

### Se crea un nuevo equipo
POST http://localhost:8080/api/teams HTTP/1.1
Content-Type: application/json

{
  "teamName": "NuevoEquipo",
  "score": 80,
  "badge": null
}

### Se actualizan los datos del equipo con id 6
PUT http://localhost:8080/api/teams/6 HTTP/1.1
Content-Type: application/json

{
  "teamName": "NuevoNombreEquipo",
  "score": 90,
  "badge": null
}

### Se borra el equipo con id 6
DELETE http://localhost:8080/api/teams/6


// Peticiones Word

### Obtener un número de palabras por defecto 10
GET http://localhost:8080/api/words?page=1&size=20

### Obtener toda la lista de palabras
GET http://localhost:8080/api/words/all

### Palabras que empiezan por antropo-
GET http://localhost:8080/api/words/starting/antropo

### Palabras que terminan en -ferro
GET http://localhost:8080/api/words/ending/ferro

### Palabras que contienen astr
GET http://localhost:8080/api/words/containing/astr

### Obtener una palabra aleatoria
GET http://localhost:8080/api/words/random

### Obtener un número específico de palabras aleatorias
GET http://localhost:8080/api/words/random/12